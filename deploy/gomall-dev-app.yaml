apiVersion: apps/v1
kind: Deployment
metadata:
  name: product
  namespace: nas-mall
spec:
  selector:
    matchLabels:
      app: product
  template:
    metadata:
      labels:
        app: product
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', 'until nc -z -v -w30 mysql-svc 3306; do echo waiting for database; sleep 5; done;' ]
      containers:
      - name: product
        image: "product:latest"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: product-config
          mountPath: /opt/gomall/product/conf/dev
        env:
        - name: GO_ENV
          value: "dev"
        - name: MYSQL_HOST
          value: "mysql-svc"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: password
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_traces_endpoint
        - name: OTEL_EXPORTER_OTLP_INSECURE
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_insecure
      volumes:
      - name: product-config
        configMap:
          name: nas-mall-config
          items:
          - key: product-app-config
            path: conf.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: product
  namespace: nas-mall
spec:
  selector:
    app: product
  ports:
    - port: 443
      targetPort: 8881
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: nas-mall
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: "frontend:latest"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: frontend-config
          mountPath: /opt/gomall/frontend/conf/dev
        env:
        - name: GO_ENV
          value: "dev"
        - name: SESSION_SECRET
          value: "4UFIOADJFIJIASOFJI"
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_traces_endpoint
        - name: OTEL_EXPORTER_OTLP_INSECURE
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_insecure
      volumes:
      - name: frontend-config
        configMap:
          name: nas-mall-config
          items:
          - key: frontend-app-config
            path: conf.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: nas-mall
spec:
  selector:
    app: frontend
  ports:
    - port: 8080
      targetPort: 8080
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart
  namespace: nas-mall
spec:
  selector:
    matchLabels:
      app: cart
  template:
    metadata:
      labels:
        app: cart
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', 'until nc -z -v -w30 mysql-svc 3306; do echo waiting for database; sleep 5; done;' ]
      containers:
      - name: cart
        image: "cart:latest"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: cart-config
          mountPath: /opt/gomall/cart/conf/dev
        env:
        - name: GO_ENV
          value: "dev"
        - name: MYSQL_HOST
          value: "mysql-svc"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: password
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_traces_endpoint
        - name: OTEL_EXPORTER_OTLP_INSECURE
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_insecure
      volumes:
      - name: cart-config
        configMap:
          name: nas-mall-config
          items:
          - key: cart-app-config
            path: conf.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: cart
  namespace: nas-mall
spec:
  selector:
    app: cart
  ports:
    - port: 443
      targetPort: 8883
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkout
  namespace: nas-mall
spec:
  selector:
    matchLabels:
      app: checkout
  template:
    metadata:
      labels:
        app: checkout
    spec:
      containers:
      - name: checkout
        image: "checkout:latest"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
     
        volumeMounts:
        - name: checkout-config
          mountPath: /opt/gomall/checkout/conf/dev
        env:
        - name: GO_ENV
          value: "dev"
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_traces_endpoint
        - name: OTEL_EXPORTER_OTLP_INSECURE
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_insecure
      volumes:
      - name: checkout-config
        configMap:
          name: nas-mall-config
          items:
          - key: checkout-app-config
            path: conf.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: checkout
  namespace: nas-mall
spec:
  selector:
    app: checkout
  ports:
    - port: 443
      targetPort: 8884
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order
  namespace: nas-mall
spec:
  selector:
    matchLabels:
      app: order
  template:
    metadata:
      labels:
        app: order
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', 'until nc -z -v -w30 mysql-svc 3306; do echo waiting for database; sleep 5; done;' ]
      containers:
      - name: order
        image: "order:latest"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: order-config
          mountPath: /opt/gomall/order/conf/dev
        env:
        - name: GO_ENV
          value: "dev"
        - name: MYSQL_HOST
          value: "mysql-svc"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: password
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_traces_endpoint
        - name: OTEL_EXPORTER_OTLP_INSECURE
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_insecure
      volumes:
      - name: order-config
        configMap:
          name: nas-mall-config
          items:
          - key: order-app-config
            path: conf.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: order
  namespace: nas-mall
spec:
  selector:
    app: order
  ports:
    - port: 443
      targetPort: 8885
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  namespace: nas-mall
spec:
  selector:
    matchLabels:
      app: payment
  template:
    metadata:
      labels:
        app: payment
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', 'until nc -z -v -w30 mysql-svc 3306; do echo waiting for database; sleep 5; done;' ]
      containers:
      - name: payment
        image: "payment:latest"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: payment-config
          mountPath: /opt/gomall/payment/conf/dev
        env:
        - name: GO_ENV
          value: "dev"
        - name: MYSQL_HOST
          value: "mysql-svc"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: password
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_traces_endpoint
        - name: OTEL_EXPORTER_OTLP_INSECURE
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_insecure
      volumes:
      - name: payment-config
        configMap:
          name: nas-mall-config
          items:
          - key: payment-app-config
            path: conf.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  namespace: nas-mall
spec:
  selector:
    app: payment
  ports:
    - port: 443
      targetPort: 8886
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  namespace: nas-mall
spec:
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      labels:
        app: user
    spec:
      initContainers:
        - name: wait-for-db
          image: busybox
          imagePullPolicy: IfNotPresent
          command: [ 'sh', '-c', 'until nc -z -v -w30 mysql-svc 3306; do echo waiting for database; sleep 5; done;' ]
      containers:
      - name: user
        image: "user:latest"
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: user-config
          mountPath: /opt/gomall/user/conf/dev
        env:
        - name: GO_ENV
          value: "dev"
        - name: MYSQL_HOST
          value: "mysql-svc"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-password
              key: password
        - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_traces_endpoint
        - name: OTEL_EXPORTER_OTLP_INSECURE
          valueFrom:
            configMapKeyRef:
              name: nas-mall-config
              key: otel_exporter_otlp_insecure
      volumes:
      - name: user-config
        configMap:
          name: nas-mall-config
          items:
          - key: user-app-config
            path: conf.yaml

---
apiVersion: v1
kind: Service
metadata:
  name: user
  namespace: nas-mall
spec:
  selector:
    app: user
  ports:
    - port: 443
      targetPort: 8882
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nas-mall-config
  namespace: nas-mall
data:
  product-app-config: |
    kitex:
      service: "product"
      address: ":8881"
      metrics_port: ":9991"
      log_level: info
      log_file_name: "log/kitex.log"
      log_max_size: 10
      log_max_age: 3
      log_max_backups: 50
    registry:
      registry_address:
        - consul-svc:8500
      username: ""
      password: ""
    mysql:
      dsn: "%s:%s@tcp(%s:3306)/product?charset=utf8mb4&parseTime=True&loc=Local"
    redis:
      address: "redis-svc:6379"
      username: ""
      password: ""
      db: 0
  frontend-app-config: |
    hertz:
      address: ":8080"
      metrics_port: 8090
      enable_pprof: false
      enable_gzip: true
      enable_access_log: true
      log_level: info
      log_file_name: "log/hertz.log"
      log_max_size: 10
      log_max_age: 3
      log_max_backups: 50
      registry_addr: "consul-svc:8500"
    mysql:
      dsn: "gorm:gorm@tcp(127.0.0.1:3306)/gorm?charset=utf8mb4&parseTime=True&loc=Local"
    redis:
      address: "redis-svc:6379"
      username: ""
      password: ""
      db: 0
  cart-app-config: |
    kitex:
      service: "cart"
      address: ":8883"
      metrics_port: ":9993"
      log_level: info
      log_file_name: "log/kitex.log"
      log_max_size: 10
      log_max_age: 3
      log_max_backups: 50
    registry:
      registry_address:
        - consul-svc:8500
      username: ""
      password: ""
    mysql:
      dsn: "%s:%s@tcp(%s:3306)/product?charset=utf8mb4&parseTime=True&loc=Local"
    redis:
      address: "redis-svc:6379"
      username: ""
      password: ""
      db: 0
  checkout-app-config: |
    kitex:
      service: "checkout"
      address: ":8884"
      metrics_port: ":9994"
      log_level: info
      log_file_name: "log/kitex.log"
      log_max_size: 10
      log_max_age: 3
      log_max_backups: 50
    registry:
      registry_address:
        - consul-svc:8500
      username: ""
      password: ""
    mysql:
      dsn: "gorm:gorm@tcp(127.0.0.1:3306)/gorm?charset=utf8mb4&parseTime=True&loc=Local"
    redis:
      address: "redis-svc:6379"
      username: ""
      password: ""
      db: 0
    nats:
      address: "nats-svc:4222"
  email-app-config: |
    kitex:
      service: "email"
      address: ":8888"
      log_level: info
      log_file_name: "log/kitex.log"
      log_max_size: 10
      log_max_age: 3
      log_max_backups: 50
    registry:
      registry_address:
        - consul-svc:8500
      username: ""
      password: ""
    mysql:
      dsn: "gorm:gorm@tcp(127.0.0.1:3306)/gorm?charset=utf8mb4&parseTime=True&loc=Local"
    redis:
      address: "127.0.0.1:6379"
      username: ""
      password: ""
      db: 0
    nats:
      address: "nats-svc:4222"
  order-app-config: |
    kitex:
      service: "order"
      address: ":8885"
      metrics_port: ":9995"
      log_level: info
      log_file_name: "log/kitex.log"
      log_max_size: 10
      log_max_age: 3
      log_max_backups: 50
    registry:
      registry_address:
        - consul-svc:8500
      username: ""
      password: ""
    mysql:
      dsn: "%s:%s@tcp(%s:3306)/order?charset=utf8mb4&parseTime=True&loc=Local"
    redis:
      address: "redis-svc:6379"
      username: ""
      password: ""
      db: 0
  payment-app-config: |
    kitex:
      service: "payment"
      address: ":8886"
      metrics_port: ":9996"
      log_level: info
      log_file_name: "log/kitex.log"
      log_max_size: 10
      log_max_age: 3
      log_max_backups: 50
    registry:
      registry_address:
        - consul-svc:8500
      username: ""
      password: ""
    mysql:
      dsn: "%s:%s@tcp(%s:3306)/payment?charset=utf8mb4&parseTime=True&loc=Local"
    redis:
      address: "127.0.0.1:6379"
      username: ""
      password: ""
      db: 0
  user-app-config: |
    kitex:
      service: "user"
      address: ":8882"
      metrics_port: ":9992"
      log_level: debug
      log_file_name: "log/kitex.log"
      log_max_size: 10
      log_max_age: 3
      log_max_backups: 50
    registry:
      registry_address:
        - consul-svc:8500
      username: ""
      password: ""
    mysql:
      dsn: "%s:%s@tcp(%s:3306)/user?charset=utf8mb4&parseTime=True&loc=Local"
    redis:
      address: "redis-svc:6379"
      username: ""
      password: ""
      db: 0
  otel_exporter_otlp_traces_endpoint: "http://jaeger-svc:4317"
  otel_exporter_otlp_insecure: "true"