syntax="proto3";

package user;

option go_package="/user";

service UserService {
    rpc Register(RegisterReq) returns (RegisterResp) {}
    rpc Login(LoginReq) returns (LoginResp) {}
    rpc Logout(LogoutReq) returns (LogoutResp) {}
    rpc DeleteUser(DeleteUserReq) returns (DeleteUserResp) {}
    rpc UpdateUser(UpdateUserReq) returns (UpdateUserResp) {}
    rpc GetUserInfo(GetUserInfoReq) returns (GetUserInfoResp) {}
}

message RegisterReq {
    string email = 1;
    string password = 2;
    string confirm_password = 3;
}

message RegisterResp {
    uint64 user_id = 1;
}

message LoginReq {
    string email= 1;
    string password = 2;
}

message LoginResp {
    uint64 user_id = 1;
}
// 用户登出
message LogoutReq {
    uint64 user_id = 1;
}

message LogoutResp {
    // 响应状态
    bool success = 1;
    // 错误信息
    string message = 2;
}

// 删除用户
message DeleteUserReq {
    uint64 user_id = 1;
    // 输入密码确认删除
    string password = 2;
}
message DeleteUserResp {
    // 响应状态
    bool success = 1;
    // 错误信息
    string message = 2;
}

// 更新用户
message UpdateUserReq {
    uint64 user_id = 1;        // 要更新的用户ID
    string password = 2;       // 原密码（用于验证身份）
    optional string new_email = 3;    // 新邮箱（可选更新）
    optional string new_password = 4; // 新密码（可选更新）
}
message UpdateUserResp {
    // 响应状态
    bool success = 1;
    // 错误信息
    string message = 2;
    uint64 user_id = 3;        // 返回更新后的用户ID
    string new_email = 4;      // 更新后的邮箱（若有修改）
}

// 获取用户身份信息
message GetUserInfoReq {
    uint64 user_id = 1;
    string password = 2;  // 或使用 password 字段验证
}

message GetUserInfoResp {
    bool success = 1;
    string message = 2;
    uint64 user_id = 3;
    string email = 4;
    uint64 created_at = 5;
    uint64 updated_at = 6;
    uint64 deleted_at = 7;
}